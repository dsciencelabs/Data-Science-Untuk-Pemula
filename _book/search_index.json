[
["4-Interface-Data.html", "Chapter 4 Interface Data 4.1 Direktori Kerja (Working Directory) 4.2 Membaca/Menulis CSV 4.3 Membaca/Menulis Excel 4.4 Membaca/Menulis TXT dan RDS 4.5 Membaca/Menulis XML 4.6 Membaca/Menulis JSON 4.7 Membaca Data dari Web 4.8 Sistem Basis Data dengan R", " Chapter 4 Interface Data Dengan R, kita dapat membaca data dari file yang tersimpan di luar Environment R. Kita juga dapat menulis data menjadi bentuk file yang akan disimpan dan diakses oleh sistem operasi. R dapat membaca dan menulis ke beberapa format file seperti csv, excel, txt, rds, xml, json, dll. 4.1 Direktori Kerja (Working Directory) Sebelum kita mulai bekerja menggunakan data (data interface), pertama-tama pastikan working directory Anda berada di koneksi yang tepat. Anda dapat memeriksanya menggunakan fungsi getwd(). Anda juga dapat mengeset sebuah working directory baru menggunakan fungsi setwd(). print(getwd()) # memperoleh dan mencetak working directory ## [1] &quot;C:/Users/Bakti/Desktop/Bookdown/Data-Science-Untuk-Pemula&quot; getwd() # memperoleh dan mencetak working directory ## [1] &quot;C:/Users/Bakti/Desktop/Bookdown/Data-Science-Untuk-Pemula&quot; #setwd(&quot;C:/Users/Bakti/Desktop/&quot;) # mengeset working directory Anda #setwd(&quot;C:\\\\Users\\\\Bakti\\\\Desktop\\\\&quot;) # atau dengan cara ini 4.2 Membaca/Menulis CSV Ini adalah sebuah contoh sederhana dari fungsi read.csv untuk membaca sebuah file CSV yang tersedia di working directory Anda saat ini. # csv &lt;- read.csv(file.choose()) # tampilan file csv tanpa `setwd` csv1 &lt;- read.csv(&quot;Data/csv1.csv&quot;,sep = &quot;,&quot;) # ini untuk membaca data dengan pemisah koma csv2 &lt;- read.csv(&quot;Data/csv2.csv&quot;,sep = &quot;;&quot;) # ini untuk membaca data dengan pemisah titik koma head(csv2,3) # mencetak hasil dari `data1` ## id name salary start_date dept ## 1 1 Julian 623,3 2022-01-01 DS ## 2 2 Vanessa 515,2 2022-09-23 DS ## 3 3 Jeffry 611 2022-11-15 BA R dapat membuat file csv dari data frame yang ada. Fungsi write.csv() digunakan untuk membuat file csv. File ini dibuat di working directory. write.csv(csv2,&quot;Data/csv3.csv&quot;) 4.3 Membaca/Menulis Excel Microsoft Excel adalah program spreadsheet yang paling banyak digunakan yang menyimpan data dalam format .xls atau .xlsx. R dapat membaca file-file ini secara langsung menggunakan beberapa packages (paket) khusus excel. Kita akan menggunakan package readxl. # xlsx &lt;- read_excel(file.choose()) # tampilan file xlsx tanpa `setwd` # install.packages(&quot;readxl&quot;) # menginstal package `readxl` library(&quot;readxl&quot;) # memuat package `readxl` xlsx1&lt;-read_excel(&quot;Data/xlsx1.xlsx&quot;,sheet=1) # membaca/impor data xlsx dari PC head(xlsx1,3) ## # A tibble: 3 x 5 ## id name salary start_date dept ## &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dttm&gt; &lt;chr&gt; ## 1 1 Julian 623 2022-01-01 00:00:00 DS ## 2 2 Vanessa 515 2022-09-23 00:00:00 DS ## 3 3 Jeffry 611 2022-11-15 00:00:00 BA Untuk menulis data frame yang ada ke dalam file excel Anda harus menginstal package writexl. # install.packages(&quot;writexl&quot;) # menginstal package `readxl` library(&quot;writexl&quot;) # memuat package `readxl` writexl::write_xlsx(xlsx1,&quot;Data/xlsx2.xlsx&quot;) # memeriksa output di working directory Anda 4.4 Membaca/Menulis TXT dan RDS Salah satu tugas paling umum yang kita lakukan adalah membaca data dari file CSV dan XLSX. Namun, proses membaca data bisa melambat untuk file CSV atau XLSX yang besar. Salah satu trik yang rapi adalah membaca data dan menyimpannya sebagai file TXT atau file biner R (RDS). Untuk mengimpor file TXT, kita menggunakan read.table() dan untuk mengimpor file RDS kita dapat menggunakan readRDS(). # txt1 &lt;- read.table(file.choose()) # tampilan file TXT tanpa `setwd` txt1 &lt;- read.table(&quot;Data/txt1.txt&quot;) # membaca/memuat format TXT (notepad) txt1 &lt;- source(&quot;Data/txt1.Rdmpd&quot;) # membaca/memuat format TXT (Rdmpd) rds1 &lt;- readRDS(&quot;Data/rds1.rds&quot;) # membaca/memuat format RDS biner ascii1 &lt;- readRDS(&quot;Data/ascii1.rds&quot;) # membaca/memuat format ASCII biner Untuk menyimpan data sebagai file TXT kita dapat menggunakan fungsi write.table(), dan untuk file biner R (RDS) kita dapat menggunakan fungsi saveRDS(). Fungsi-fungsi tersebut banyak digunakan oleh R sendiri, sebagai contoh untuk menyimpan data meta untuk suatu package dan untuk menyimpan basis data help.search: ekstensi file .rds paling sering digunakan. Format ini dapat berupa biner atau ASCII. Biner lebih padat, sementara ASCII akan lebih efisien dengan sistem kontrol versi seperti Git. data &lt;- read.csv(&quot;Data/csv1.csv&quot;,sep = &quot;,&quot;) # membaca/mengimpor data dari PC Anda write.table(data,&quot;Data/txt2.txt&quot;) # meyimpan dalam format TXT (notepad) dump(&quot;data&quot;, &quot;Data/txt2.Rdmpd&quot;) # meyimpan dalam format TXT (Rdmpd) saveRDS(data, &quot;Data/rds2.rds&quot;) # menyimpan suatu objek dalam format RDS biner saveRDS(data, &quot;ascii2.rds&quot;, ascii=TRUE) # menyimpan suatu objek dalam format RDS ASCII 4.5 Membaca/Menulis XML XML adalah suatu format file yang membagikan format file dan data dari World Wide Web (www), intranet, dan di tempat lain menggunakan teks ASCII standar. XML adalah singkatan dari Extensible Markup Language, lebih lanjut tentang XML. XML berisi tag markup, mirip dengan HTML. Tag markup di xml menggambarkan arti data yang terkandung dalam file tersebut, tetapi tidak seperti HTML di mana tag markup menggambarkan struktur halaman. Anda dapat membaca suatu file xml di R menggunakan package “XML”. File XML dibaca oleh R menggunakan fungsi xmlParse(). File itu disimpan sebagai daftar (list) di R. library(&quot;XML&quot;) # memuat package yang dibutuhkan untuk membaca file XML library(&quot;methods&quot;) # memuat paket lainnya yang dibutuhkan. result &lt;- xmlParse(file = &quot;Data/xml1.xml&quot;) # memberikan nama file input ke fungsi print(result) # Mencetak hasilnya ## &lt;?xml version=&quot;1.0&quot;?&gt; ## &lt;RECORDS&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;1&lt;/id&gt; ## &lt;name&gt;Julian&lt;/name&gt; ## &lt;salary&gt;623.3&lt;/salary&gt; ## &lt;start_date&gt;1/1/2022&lt;/start_date&gt; ## &lt;dept&gt;DS&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;2&lt;/id&gt; ## &lt;name&gt;Vanessa&lt;/name&gt; ## &lt;salary&gt;515.2&lt;/salary&gt; ## &lt;start_date&gt;9/23/2022&lt;/start_date&gt; ## &lt;dept&gt;DS&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;3&lt;/id&gt; ## &lt;name&gt;Jeffry&lt;/name&gt; ## &lt;salary&gt;611&lt;/salary&gt; ## &lt;start_date&gt;11/15/2022&lt;/start_date&gt; ## &lt;dept&gt;BA&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;4&lt;/id&gt; ## &lt;name&gt;Angel&lt;/name&gt; ## &lt;salary&gt;729&lt;/salary&gt; ## &lt;start_date&gt;5/11/2022&lt;/start_date&gt; ## &lt;dept&gt;BA&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;5&lt;/id&gt; ## &lt;name&gt;Nikki&lt;/name&gt; ## &lt;salary&gt;843.25&lt;/salary&gt; ## &lt;start_date&gt;3/27/2022&lt;/start_date&gt; ## &lt;dept&gt;DS&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;6&lt;/id&gt; ## &lt;name&gt;Ardifo&lt;/name&gt; ## &lt;salary&gt;578&lt;/salary&gt; ## &lt;start_date&gt;5/21/2022&lt;/start_date&gt; ## &lt;dept&gt;Actuaries&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;7&lt;/id&gt; ## &lt;name&gt;Irene&lt;/name&gt; ## &lt;salary&gt;722.5&lt;/salary&gt; ## &lt;start_date&gt;7/30/2022&lt;/start_date&gt; ## &lt;dept&gt;Actuaries&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;8&lt;/id&gt; ## &lt;name&gt;Kefas&lt;/name&gt; ## &lt;salary&gt;632.8&lt;/salary&gt; ## &lt;start_date&gt;6/17/2022&lt;/start_date&gt; ## &lt;dept&gt;CA&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;9&lt;/id&gt; ## &lt;name&gt;Sherly&lt;/name&gt; ## &lt;salary&gt;632.8&lt;/salary&gt; ## &lt;start_date&gt;7/30/2022&lt;/start_date&gt; ## &lt;dept&gt;DE&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;EMPLOYEE&gt; ## &lt;id&gt;10&lt;/id&gt; ## &lt;name&gt;Bakti&lt;/name&gt; ## &lt;salary&gt;NA&lt;/salary&gt; ## &lt;start_date&gt;9/03/2018&lt;/start_date&gt; ## &lt;dept&gt;Lecturer&lt;/dept&gt; ## &lt;/EMPLOYEE&gt; ## &lt;/RECORDS&gt; ## Untuk menangani data secara efektif dalam file besar, kita membaca data dalam file XML sebagai suatu data frame. Kemudian memproses data frame untuk analisis data. xmldataframe &lt;- xmlToDataFrame(result) # mengonversi file input `xml` ke bentuk data frame head(xmldataframe,3) # Mencetak hasilnya ## id name salary start_date dept ## 1 1 Julian 623.3 1/1/2022 DS ## 2 2 Vanessa 515.2 9/23/2022 DS ## 3 3 Jeffry 611 11/15/2022 BA Buat file XML dengan menyalin data ini ke editor teks seperti notepad. Simpan file dengan ekstensi .xml dan pilih jenis file sebagai all files(.). 4.6 Membaca/Menulis JSON File JSON menyimpan data sebagai teks dalam format yang dapat dibaca oleh manusia. JSON adalah singkatan dari JavaScript Object Notation. R dapat membaca file JSON menggunakan package rjson. Lebih lanjut tentang JSON library(&quot;rjson&quot;) # memuat package untuk membaca file JSON json1 &lt;- fromJSON(file= &quot;Data/json1.json&quot;) # memberikan nama file input ke fungsi print(json1) # Mencetak hasilnya ## $id ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;5&quot; &quot;6&quot; &quot;7&quot; &quot;8&quot; &quot;9&quot; &quot;10&quot; ## ## $name ## [1] &quot;Julian&quot; &quot;Vanessa&quot; &quot;Jeffry&quot; &quot;Angel&quot; &quot;Nikki&quot; &quot;Ardifo&quot; &quot;Irene&quot; ## [8] &quot;Kefas&quot; &quot;Sherly&quot; &quot;Bakti&quot; ## ## $salary ## [1] &quot;623.3&quot; &quot;515.2&quot; &quot;611&quot; &quot;729&quot; &quot;843.25&quot; &quot;578&quot; &quot;722.5&quot; &quot;632.8&quot; ## [9] &quot;632.8&quot; &quot;NA&quot; ## ## $start_date ## [1] &quot;1/1/2022&quot; &quot;9/23/2022&quot; &quot;11/15/2022&quot; &quot;5/11/2022&quot; &quot;3/27/2022&quot; ## [6] &quot;5/21/2022&quot; &quot;7/30/2022&quot; &quot;6/17/2022&quot; &quot;7/30/2022&quot; &quot;9/3/2018&quot; ## ## $dept ## [1] &quot;DS&quot; &quot;DS&quot; &quot;BA&quot; &quot;DA&quot; &quot;DS&quot; &quot;Actuaries&quot; ## [7] &quot;Actuaries&quot; &quot;CA&quot; &quot;DE&quot; &quot;Lecturer&quot; Kita dapat mengonversi data yang diekstraks di atas ke bentuk data frame R untuk analisis lebih lanjut menggunakan fungsi as.data.frame() json_data_frame &lt;- as.data.frame(json1) # mengonversi file JSON ke bentuk data frame head(json_data_frame,3) # Mencetak hasilnya ## id name salary start_date dept ## 1 1 Julian 623.3 1/1/2022 DS ## 2 2 Vanessa 515.2 9/23/2022 DS ## 3 3 Jeffry 611 11/15/2022 BA 4.7 Membaca Data dari Web Banyak situs web yang menyediakan data untuk digunakan oleh penggunanya. Dengan menggunakan program R, kita dapat mengekstrak data tertentu dari situs web tersebut secara terprogram. Di bagian ini, saya memberikan contoh cara mengimpor data dari repositori github, tetapi Anda dapat melakukan hal yang serupa pada situs web atau repositori lainnya. 4.7.1 CSV: web_csv &lt;- read.csv(&quot;https://github.com/Bakti-Siregar/dataset/raw/master/Bookdown-Data-Science-for-Beginners/csv1.csv&quot;) head(web_csv,3) ## id name salary start_date dept ## 1 1 Julian 623,3 1/1/2022 DS ## 2 2 Vanessa 515,2 9/23/2022 DS ## 3 3 Jeffry 611 11/15/2022 BA 4.7.2 XLSX: library(rio) # package ini untuk mengimpor data dari github install_formats() # mungkin Anda perlu menginstal packages yang disarankan yang belum terinstal ## [1] TRUE web_xlsx &lt;-rio::import(&quot;https://github.com/Bakti-Siregar/dataset/blob/master/Bookdown-Data-Science-for-Beginners/xlsx1.xlsx?raw=true&quot;) head(web_xlsx,3) ## id name salary start_date dept ## 1 1 Julian 623 2022-01-01 DS ## 2 2 Vanessa 515 2022-09-23 DS ## 3 3 Jeffry 611 2022-11-15 BA 4.7.3 LAINNYA: web_txt &lt;- read.table(&quot;type URL/Web.txt here&quot;) # membaca/memuat format TXT (notepad) dari web web_rds &lt;- readRDS(&quot;type URL/Web.rds here&quot;) # membaca/memuat format RDS dari web web_ascii &lt;- readRDS(&quot;type URL/Web.ascii here&quot;) # membaca/memuat format ASCII dari web web_xml&lt;- xmlParse(&quot;type URL/Web.xml here&quot;) # membaca/memuat format XML dari web xmlToDataFrame(web_xml) # mengonversi file xml input ke bentuk data frame web_json &lt;- fromJSON(&quot;type URL/Web.json here&quot;) # membaca/memuat format JSON dari web as.data.frame(web_json) # mengonversi file JSON ke bentuk data frame 4.8 Sistem Basis Data dengan R Data tersebut adalah sistem basis data relasional yang disimpan dalam format yang dinormalisasi. Jadi, untuk melakukan komputasi statistik kita akan memerlukan query Sql yang lebih lanjut dan sangat kompleks. Tetapi R dapat terhubung ke banyak basis data relasional dengan mudah seperti MySql, Oracle, server Sql, dll serta mengambil catatan sebagai data frame dari basis data tersebut. Setelah data itu tersedia di lingkungan (environment) R, maka akan menjadi kumpulan data R normal dan dapat dimanipulasi atau dianalisis menggunakan semua package dan fungsi yang kuat. Catatan: Kita akan mempelajari bagian ini lebih mendalam di “Sistem Basis Data dengan R”. "]
]
